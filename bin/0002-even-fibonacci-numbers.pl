#!/usr/bin/env perl

use strict;
use warnings;
use feature 'say';
use bigint;

my $limit = $ARGV[0] // 4_000_000;

my @fibos = (1, 2);
my $sum = 0;
my $count = 0;
map { $sum += $_; ++$count; } grep { $_ % 2 == 0 } fibo(@fibos);
say "Sum of the $count even-valued fibonaccis < $limit: $sum";


sub fibo {
    my @fibos = @_;

    my $next_fibo = $fibos[-1] + $fibos[-2];
    return @fibos if $next_fibo > $limit;
    push @fibos => $next_fibo;
    fibo(@fibos);
}


=pod
    
    Problem 2.
    
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
    By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89.
    
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    
=cut


