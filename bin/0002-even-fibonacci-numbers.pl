#!/usr/bin/env perl

use strict;
use warnings;
use v5.18;

use Time::HiRes qw/time tv_interval/;

my $limit = $ARGV[0] // 4_000_000;

my $start = [ time ];
main();
say 'Done in ' . sprintf ('%.5f' => tv_interval $start) . ' seconds.';

sub main {
    my $fibos = [1, 2];
    my $sum = 0;
    map { $sum += $_ } grep { $_ % 2 == 0 } @{ fibo($fibos) };
    say $sum;
}

sub fibo {
	my $fibos = shift;

	my $next_fibo = $fibos->[-1] + $fibos->[-2];
	return $fibos if $next_fibo > $limit;
	push @{ $fibos} => $next_fibo;
	fibo($fibos);
}


=pod
    
    Problem 2.
    
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
    By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89.
    
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    
=cut


